<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <LinearGradientBrush x:Key="WindowHeaderBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.25" Color="#BBC8F9" />
        <GradientStop Offset="1" Color="#FF6582F3" />
    </LinearGradientBrush>

    <Style x:Key="WindowHeaderStyle" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource WindowHeaderBackgroundBrush}" />
    </Style>

    <Style x:Key="LinkButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ConfigurationWindowBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="LightBlue" />
    </Style>

    <Style x:Key="ConfigurationTextBoxStyle" TargetType="{x:Type Control}">
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="150" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Blue" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ConfigurationLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>



    <Style x:Key="ValidateErrorStyle" TargetType="{x:Type Control}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="LoginBusyTemplate" TargetType="ContentControl">
        <Grid Width="400"
                    Height="150">
            <Image Width="100"
                   Height="100"
                   Source="{Binding LastLoginVM.IconPath}" VerticalAlignment="Center" HorizontalAlignment="Center" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="LoginBusyStyle" TargetType="ContentControl">
        <Setter Property="Template" Value="{StaticResource LoginBusyTemplate}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>


    <ControlTemplate x:Key="BusyTemplate" TargetType="ContentControl">
        <StackPanel Width="400"
                    Height="220"
                    HorizontalAlignment="Center">
            <Image Width="128"
                   Height="128"
                   Source="/Images/Logo128.png" />
            <ProgressBar Height="20"
                         Margin="20,5,20,5"
                         HorizontalAlignment="Stretch"
                         IsIndeterminate="True" />
            <TextBlock Height="auto"
                       HorizontalAlignment="Center"
                       FontSize="20"
                       Foreground="DarkGreen"
                       Text="{Binding BusyMessage}" />
            <StackPanel Height="auto"
                        Margin="0,5,0,0"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <Button Width="80"
                        HorizontalAlignment="Center"
                        Background="LightYellow"
                        Command="{Binding CancelCommand}"
                        Content="{Binding CancelLabel}"
                        FontSize="20"
                        Foreground="Blue" />
            </StackPanel>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="BusyStyle" TargetType="ContentControl">
        <Setter Property="Template" Value="{StaticResource BusyTemplate}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="BusyTemplateNoCancel" TargetType="ContentControl">
        <StackPanel Width="400"
                    Height="220"
                    HorizontalAlignment="Center">
            <Image Width="128"
                   Height="128"
                   Source="/Images/Logo128.png" />
            <ProgressBar Height="20"
                         Margin="20,5,20,5"
                         HorizontalAlignment="Stretch"
                         IsIndeterminate="True" />
            <TextBlock Height="auto"
                       HorizontalAlignment="Center"
                       FontSize="20"
                       Foreground="DarkGreen"
                       Text="{Binding BusyMessage}" />
            <StackPanel Height="auto"
                        Margin="0,5,0,0"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
            </StackPanel>
        </StackPanel>
    </ControlTemplate>
    

    <Style x:Key="BusyStyleNoCancel" TargetType="ContentControl">
        <Setter Property="Template" Value="{StaticResource BusyTemplateNoCancel}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="CheckUpdateTemplate" TargetType="ContentControl">
        <StackPanel Width="390"
                    Height="170"
                    HorizontalAlignment="Center">
            <Image Width="80"
                   Height="80"
                   Source="/Images/Logo128.png" />
            <ProgressBar Height="15"
                         Margin="20,5,20,5"
                         HorizontalAlignment="Stretch"
                         IsIndeterminate="True" />
            <TextBlock Height="auto"
                       HorizontalAlignment="Center"
                       FontSize="12"
                       Foreground="DarkGreen"
                       Text="{Binding BusyMessage}" />
            <StackPanel Height="auto"
                        Margin="0,5,0,0"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
            </StackPanel>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="CheckUpdateStyle" TargetType="ContentControl">
        <Setter Property="Template" Value="{StaticResource CheckUpdateTemplate}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="VideoControlBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="5,5,10,0" />
        <Setter Property="Background" Value="#deebff" />
    </Style>

    <LinearGradientBrush x:Key="CheckedBlue" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF285AB3" Offset="0" />
        <GradientStop Color="#FF4184EC" Offset="0.5" />
        <GradientStop Color="#FF558BED" Offset="0.5" />
        <GradientStop Color="#FF7DACF0" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckedOrange" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFCA6A13" Offset="0" />
        <GradientStop Color="#FFF67D0C" Offset="0.2" />
        <GradientStop Color="#FFFE7F0C" Offset="0.2" />
        <GradientStop Color="#FFFA8E12" Offset="0.5" />
        <GradientStop Color="#FFFF981D" Offset="0.5" />
        <GradientStop Color="#FFFCBC5A" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckedOrangeBorder" Color="#FF8E4A1B" />
    <SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />
    <Style x:Key="OrangeSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="10" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        <Grid>
                            <Border x:Name="BackgroundBorder" BorderBrush="#FF939393" BorderThickness="1" CornerRadius="3" Height="18" Width="55">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FFB5B5B5" Offset="0" />
                                        <GradientStop Color="#FFDEDEDE" Offset="0.1" />
                                        <GradientStop Color="#FFEEEEEE" Offset="0.5" />
                                        <GradientStop Color="#FFFAFAFA" Offset="0.5" />
                                        <GradientStop Color="#FFFEFEFE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Ellipse x:Name="Off" Width="14" Height="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Line x:Name="On" X1="0" Y1="0" X2="0" Y2="14" Stroke="#FF7A7A7A" StrokeThickness="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <Border BorderBrush="#FF939393" HorizontalAlignment="Left" x:Name="slider" Width="30" Height="18" BorderThickness="1" CornerRadius="3" RenderTransformOrigin="0.5,0.5" Margin="0">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFF0F0F0" Offset="0" />
                                        <GradientStop Color="#FFCDCDCD" Offset="0.1" />
                                        <GradientStop Color="#FFFBFBFB" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <Setter TargetName="On" Property="Stroke" Value="White" />
                            <Setter TargetName="Off" Property="Stroke" Value="White" />
                            <!-- Change Orange or Blue color here -->
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CheckedOrange}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource CheckedOrangeBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!-- ToDo: Add Style for Isenabled == False -->
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>